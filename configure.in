# -*-m4-*-
# Process this file with autoconf to produce a configure script.
#
AC_REVISION($Revision: 1.54 $)
AC_PREREQ(2.52)

# -----------------------------------------------------------------------------
# Initialize environment
# -----------------------------------------------------------------------------
AC_INIT([d4x],[2.03],[chuchelo@krasu.ru])

AC_CONFIG_SRCDIR([nt.spec.in])
AC_CONFIG_AUX_DIR([admin])
AM_CONFIG_HEADER([config.h])

# This ksh/zsh (and bash >= 2.05) feature conflict with `cd blah; pwd`
unset CDPATH

AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

# Automake 1.5 doesn't ready for this feature yet...
# AM_INIT_AUTOMAKE([gnu])
# ... so use an old fashioned call.
AM_INIT_AUTOMAKE($PACKAGE_NAME, $PACKAGE_VERSION)

AC_PREFIX_DEFAULT(/usr/local)

# -----------------------------------------------------------------------------
# Parse some configuration keys
# -----------------------------------------------------------------------------

# NOTE: Automatic Makefiles rebuild works ONLY in maintainer mode!!!
AM_MAINTAINER_MODE

# --disable-release flags... i.e. no optimized code
# (to allow debuggers show/trace source code properly)
CXXFLAGS="-O0"

# Optimization options
AC_ARG_ENABLE(extra-optimize,
    AC_HELP_STRING([--enable-extra-optimize],
                   [Such as --enable-release + compile with maximum optimizations]),
    [if test "x$enable_extra_optimize" = "xyes"; then
	CXXFLAGS="-O3"
    fi])
# *** Default mode: release ***
AC_ARG_ENABLE(release, 
    AC_HELP_STRING([--enable-release], [Compile with usual optimization level without debug code (default)]),,
    [enable_release="yes"])
if test "x$enable_release" = "xyes"; then
    CXXFLAGS="-O2"
fi

# Maintainer helpers
AC_ARG_ENABLE(debug,
    AC_HELP_STRING([--enable-debug], [Enable debug info and some debugging code to be compiled]),
    [if test "x$enable_debug" = "xyes"; then
	CXXFLAGS=$CXXFLAGS" -ggdb"
        AC_DEFINE(DEBUG_ALL, , [Activate debug code])
    fi])
AC_ARG_ENABLE(warnings,
    AC_HELP_STRING([--enable-warnings], [Enable all warnings at compile time]),
    [if test "x$enable_warnings" = "xyes"; then
	CXXFLAGS=$CXXFLAGS" -Wall"
    fi])

# Extra features options
AC_ARG_ENABLE(esd,
    AC_HELP_STRING([--disable-esd], [Disable esound output (default=enabled)]),,
    enable_esd="yes")
AC_ARG_ENABLE(oss,
    AC_HELP_STRING([--disable-oss], [Disable OSS sound output (default=enabled)]),,
    enable_oss="yes")

# -----------------------------------------------------------------------------
# Checks for arch/OS
# -----------------------------------------------------------------------------

# Check for OS
case ${host} in
    *-linux*)
    ;;
    *-solaris*)
	# From original Makefile: SOLARIS_TYPECASTED_X11_HEADERS
	OS_INCLUDES="-I/var/tmp/src"
	AC_DEFINE(_POSIX_THREADS_SEMANTICS, ,[Needed for Solaris reentrant code])
    ;;
    *-freebsd*)
	OS_CXXFLAGS="-pthread"
	ac_pthread_strict_check=no
    ;;
    *-irix*)
	OS_CXXFLAGS="-fpermissive"
    ;;
esac

# check for CPU
dnl
# I know exactly that on Intel and ADM CPUs this improve code
# but 'bout others I can say nothing...
dnl
am_intel_amd_common="-fexpensive-optimizations -malign-loops=4 -malign-jumps=4 -malign-functions=4 -fomit-frame-pointer"
ac_pthread_strict_check="yes"

AC_MSG_CHECKING(host CPU architecture) 
case ${host} in
    i586-* | i686-*)
	AC_MSG_RESULT([Intel x86])
	if test "x$enable_extra_optimize" = "xyes"; then
	    OS_CXXFLAGS=${am_intel_amd_common}
	fi
    ;;
    athlon-*)
	AC_MSG_RESULT([AMD Athlon])
	if test "x$enable_extra_optimize" = "xyes"; then
	    OS_CXXFLAGS=${am_intel_amd_common}" -mcpu=athlon"
	fi
    ;;
    *)
	AC_MSG_RESULT([unknown])
    ;;
esac

# -----------------------------------------------------------------------------
# Checks for programs
# -----------------------------------------------------------------------------
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AM_PROG_INSTALL_STRIP
AC_PROG_AWK
AC_PROG_RANLIB

# Set of available languages (look at /po dir instead of static list).
ALL_LINGUAS=`(cd ${srcdir}/po && ls *.po | sed -e 's/\.po$//')`

# Workaround for bug in gettext version 0.10.38 (and maybe below)
# (wich is doesn't aware with new autoconf)
test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"

AM_GNU_GETTEXT

# -----------------------------------------------------------------------------
# Checks for libraries.
# -----------------------------------------------------------------------------
# Should we check for esound?
if test "x$enable_esd" = xyes; then
    AM_PATH_ESD(,[have_esd=yes AC_DEFINE(HAVE_ESD,,[Define if have libesd])], have_esd=no)
else
    have_esd=no
fi
AM_CONDITIONAL(HAVE_ESD, [test "x$have_esd" = xyes])

AM_PATH_GLIB(1.2.10,, AC_MSG_ERROR([*** GLIB >= 1.2.10 not installed! ***]))
AM_PATH_GTK(1.2.10,, AC_MSG_ERROR([*** GTK >= 1.2.10 not installed! ***]))
AM_PATH_GDK_PIXBUF(,, AC_MSG_ERROR([*** GdkPixbuf not installed! ***]))

# POSIX threads should be always present...
if test "x$ac_pthread_strict_check" = "xyes"; then
    AC_CHECK_LIB([pthread], [pthread_testcancel],, AC_MSG_ERROR([*** POSIX threads not found! ***]))
fi

# Choose regex library
# AM_WITH_RX

# -----------------------------------------------------------------------------
# Checks for header files.
# -----------------------------------------------------------------------------
AC_PATH_X
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h errno.h fcntl.h netdb.h])
AC_CHECK_HEADERS([netinet/in.h sys/file.h regex.h])
AC_CHECK_HEADERS([sys/ioctl.h sys/socket.h])
AC_CHECK_HEADERS([utime.h pthread.h sys/timeb.h])
if test "x$enable_oss" = "xyes"; then
    AC_CHECK_HEADERS([sys/soundcard.h],
                     [have_oss=yes AC_DEFINE(D4X_WITH_OSS,,
                     [Define if OSS enabled])], have_oss=no)
fi

# -----------------------------------------------------------------------------
# Checks for typedefs, structures, and compiler characteristics.
# -----------------------------------------------------------------------------
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

# -----------------------------------------------------------------------------
# Checks for library functions.
# -----------------------------------------------------------------------------
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_UTIME_NULL
AC_CHECK_FUNCS([ftime ftruncate gethostbyname gettimeofday localtime_r])
AC_CHECK_FUNCS([memmove memset mkdir regcomp select socket])
AC_CHECK_FUNCS([strerror strncasecmp strstr utime flock pthread_testcancel])

# -----------------------------------------------------------------------------
# Additianal actions before produce output files
# -----------------------------------------------------------------------------

# It's time to define $prefix if it was ommited...
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

# Make gettext > 0.10.35 work
# GMSGFMT="OLD_PO_FILE_INPUT=yes $GMSGFMT"
# MSGFMT="OLD_PO_FILE_INPUT=yes $MSGFMT"
localedir=${prefix}/share/locale
AC_SUBST(localedir)

AC_DEFINE_UNQUOTED(LOCALEDIR,
                   "$localedir",
                   [Location of locales])
AC_DEFINE_UNQUOTED(D4X_SHARE_PATH,
                   "$prefix/share/d4x",
                   [Location of architecture independed files])

AC_DEFINE(_REENTRANT, , [Enable reenrant code of glibc])

# Prepare all requiered flags
CXXFLAGS="${CXXFLAGS} ${OS_CXXFLAGS}"
CPPFLAGS="${CPPFLAGS} ${ESD_CFLAGS} ${GLIB_CFLAGS} ${GTK_CFLAGS} ${GDK_PIXBUF_CFLAGS} ${OS_INCLUDES}"
LIBS="${LIBS} ${ESD_LIBS} ${GLIB_LIBS} ${GTK_LIBS} ${GDK_PIXBUF_LIBS} ${LIBRX}"

# Remove duplicates from options
CPPFLAGS=`echo $CPPFLAGS | $AWK -f ${srcdir}/admin/strip.awk`
LIBS=`echo $LIBS | $AWK -f ${srcdir}/admin/strip.awk`

# Remove -lpthread for some OS'es
if test "x$ac_pthread_strict_check" = "xno"; then
    LIBS=`echo $LIBS | sed 's/\(-lpthread\)//'`
fi

# Force config.h be included before every module compilation
if test "x$ac_config_headers" != "x"; then
    CPPFLAGS="${CPPFLAGS} "'-include $(CONFIG_HEADER)'
fi

# Schedule commands to execute after Makefiles creation
# (included gettext doesn't need our CPPFLAGS, moreover
# it is not define CONFIG_HEADER in itsown Makefile so
# we get a compile errors 'bcouse incorrect command line)
AC_CONFIG_COMMANDS(fixer,
[
    # The following command will be executed by config.status
    # with `pwd` == $top_builddir...
    if test -f intl/Makefile; then
	cat intl/Makefile \
	| sed 's/^CPPFLAGS *=.*/CPPFLAGS = /' > intl/Makefile.tmp
	mv -f intl/Makefile.tmp intl/Makefile
    fi
])

# Make #include guards for config.h
AH_TOP([
#ifdef __D4X_CONFIG_H
# error Do not include this file directly! All needed actions already done by configure script.
#else /* __D4X_CONFIG_H */
# define __D4X_CONFIG_H
])
AH_BOTTOM([#endif /* !__D4X_CONFIG_H */])

# -----------------------------------------------------------------------------
# Create output files
# -----------------------------------------------------------------------------
AC_CONFIG_FILES([Makefile  po/Makefile.in \
                 DOC/Makefile \
		 \
                 main/Makefile \
                 main/face/Makefile \
                 po/Makefile.in \
		 share/Makefile \
		 nt.spec])
AC_OUTPUT

# -----------------------------------------------------------------------------
# Show our configuration
# -----------------------------------------------------------------------------
# 1) calculate all what we need to display
cxx_version=`${CXX} --version`
if test x${have_esd} = xno; then
    esd_spam="disabled"
else
    esd_spam="$esd_major_version.$esd_minor_version.$esd_micro_version"
fi
if test x${have_oss} = xyes; then
    oss_spam="yes"
else
    oss_spam="disabled"
fi
acm="debug"
if test "x$enable_extra_optimize" = "xyes"; then
    acm="release (extra optimize)"
fi
if test "x$enable_release" = "xyes"; then
    acm="release"
fi
if test "x$USE_MAINTAINER_MODE" = "xyes"; then
    acm=${acm}" (maintainer mode)"
fi

# 2) show config
echo "------------------------------------------------------------------------------"
cat << EOF

         Configuration:    ${acm}

      Host system type:    ${host}
          Install path:    ${prefix}
          C++ compiler:    ${CXX} (${cxx_version})

            ESD output:    ${esd_spam}
            OSS output:    ${oss_spam}

EOF
if test "x$USE_MAINTAINER_MODE" = "xyes"; then
    echo "    Preprocessor flags:"
    echo ${CPPFLAGS} | fold -sw 50 | sed 's/\(.*\)/                           \1/'
    echo "        Compiler flags:"
    echo ${CXXFLAGS} | fold -sw 50 | sed 's/\(.*\)/                           \1/'
    echo "          Linker flags:"
    echo ${LDFLAGS} | fold -sw 50 | sed 's/\(.*\)/                           \1/'
    echo "       Addon libraries:"
    echo ${LIBS} | fold -sw 50 | sed 's/\(.*\)/                           \1/'
    echo
fi
echo "------------------------------------------------------------------------------"
